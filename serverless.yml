service: smart-uploader-lambda-annotator

frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.9
  region: us-east-1
  stage: ${opt:stage, 'dev'}
  environment:
    S3_BUCKET: ${self:service}-${self:provider.stage}
    AWS_REGION: ${self:provider.region}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:GetObject
        - s3:PutObject
        - s3:DeleteObject
      Resource: 
        - "arn:aws:s3:::${self:provider.environment.S3_BUCKET}/*"
    - Effect: Allow
      Action:
        - logs:CreateLogGroup
        - logs:CreateLogStream
        - logs:PutLogEvents
      Resource: "*"

functions:
  imageProcessor:
    handler: lambda/handler.process_image
    events:
      - s3:
          bucket: ${self:provider.environment.S3_BUCKET}
          event: s3:ObjectCreated:*
          rules:
            - suffix: .jpg
            - suffix: .jpeg
            - suffix: .png
            - suffix: .gif
    timeout: 30
    memorySize: 512
    environment:
      S3_BUCKET: ${self:provider.environment.S3_BUCKET}

  apiGateway:
    handler: lambda/api.handler
    events:
      - http:
          path: /api/{proxy+}
          method: ANY
          cors: true
    timeout: 30
    memorySize: 256

resources:
  Resources:
    S3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.environment.S3_BUCKET}
        CorsConfiguration:
          CorsRules:
            - AllowedHeaders: ['*']
              AllowedMethods: [GET, POST, PUT, DELETE]
              AllowedOrigins: ['*']
              MaxAge: 3000

    S3BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref S3Bucket
        PolicyDocument:
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: '*'
              Action: 's3:GetObject'
              Resource: !Sub '${S3Bucket}/*'

plugins:
  - serverless-python-requirements
  - serverless-offline

custom:
  pythonRequirements:
    dockerizePip: true
    layer:
      name: python-deps
      description: Python dependencies for image processing
    noDeploy:
      - coverage
      - pytest
      - pytest-cov 